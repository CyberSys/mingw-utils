This is mingw-utils, a collection of utilities (hopefully) useful for
MinGW and MSYS installations. It contains:

      redir     A utility for redirecting stderr within CMD boxes
      reimp     Converts certain MS-format import libs to GNU format
  [1] res2coff  Converts .res resource files to .o object format
  [2] a2dll     Create a DLL from a static archive
      dsw2mak   Create gcc-compatible GNU Makefiles from Visual Studio
                6.0 workspaces
  [3] msys-here Launch an msys window from a Windows Explorer
                context menu

For more information on each tool, see the additional documentation
under C:\MinGW\share\doc\mingw-utils

[1] Possibly obsoleted by modern incarnations of windres.
[2] Not all DLLs created in this way will be functional. Use at your
    own risk.
[3] This initial release is not guaranteed to work. It is included
    in hopes of spurring outside assistance: Patches Thoughtfully
    Considered.

The following were once provided by older versions of mingw-utils,
but are now provided by other packages or sites.

  drmingw   A JIT exception handler for Windows that can display
            debugging info. Now provided by
            http://code.google.com/p/jrfonseca/wiki/DrMingw

  dos2unix  These two tools convert line endings, but have been
  unix2dos  superseded by the cygutils-dos2unix package

  pexports  Create .def file listing symbols from DLLS. Now
            provided separately.



Compiling
=========
To build mingw-utils from source, you need only do the standard
   $ configure
   $ make
   $ make install

However, the following configure arguments are recommended:
   $ configure --prefix=`cd /mingw && pwd -W` \
               --docdir=\${prefix}/share/doc/mingw-utils/0.4 \
               --enable-subproject-docdir
   $ make

To install into a temporary staging directory, do not use DESTDIR.
Instead, override prefix as follows:
   $ make install prefix=/tmp/mingw-utils-staging

Alternatively, instead of manually creating a "staging"
tree, after a successful build, you can use the following
rules to create MinGW-standard installation packages:

	$ make sdist bdist

